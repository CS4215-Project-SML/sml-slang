// Generated from ./src/lang/sml.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class smlLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly T__29 = 30;
	public static readonly CHAR = 31;
	public static readonly STR = 32;
	public static readonly BOOL = 33;
	public static readonly REAL = 34;
	public static readonly INT = 35;
	public static readonly ABSTYPE = 36;
	public static readonly AND = 37;
	public static readonly ANDALSO = 38;
	public static readonly AS = 39;
	public static readonly CASE = 40;
	public static readonly DATATYPE = 41;
	public static readonly DO = 42;
	public static readonly ELSE = 43;
	public static readonly END = 44;
	public static readonly EXCEPTION = 45;
	public static readonly FN = 46;
	public static readonly FUN = 47;
	public static readonly HANDLE = 48;
	public static readonly IF = 49;
	public static readonly IN = 50;
	public static readonly INFIX = 51;
	public static readonly INFIXR = 52;
	public static readonly LET = 53;
	public static readonly LOCAL = 54;
	public static readonly NONFIX = 55;
	public static readonly OF = 56;
	public static readonly OP = 57;
	public static readonly OPEN = 58;
	public static readonly ORELSE = 59;
	public static readonly RAISE = 60;
	public static readonly REC = 61;
	public static readonly THEN = 62;
	public static readonly TYPE = 63;
	public static readonly VAL = 64;
	public static readonly WITH = 65;
	public static readonly WITHTYPE = 66;
	public static readonly WHILE = 67;
	public static readonly TRUE = 68;
	public static readonly FALSE = 69;
	public static readonly DIGIT = 70;
	public static readonly LETTER = 71;
	public static readonly NEWLINE = 72;
	public static readonly WHITESPACE = 73;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "CHAR", "STR", "BOOL", "REAL", 
		"INT", "ABSTYPE", "AND", "ANDALSO", "AS", "CASE", "DATATYPE", "DO", "ELSE", 
		"END", "EXCEPTION", "FN", "FUN", "HANDLE", "IF", "IN", "INFIX", "INFIXR", 
		"LET", "LOCAL", "NONFIX", "OF", "OP", "OPEN", "ORELSE", "RAISE", "REC", 
		"THEN", "TYPE", "VAL", "WITH", "WITHTYPE", "WHILE", "TRUE", "FALSE", "DIGIT", 
		"LETTER", "NEWLINE", "WHITESPACE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'='", "'('", "','", "')'", "'['", "']'", "'{'", "'}'", 
		"'#'", "'=>'", "'''", "'_'", "'!'", "'%'", "'&'", "'$'", "'+'", "'-'", 
		"'/'", "':'", "'<'", "'>'", "'?'", "'@'", "'\\'", "'~'", "'^'", "'|'", 
		"'*'", undefined, undefined, undefined, undefined, undefined, "'abstype'", 
		"'and'", "'andalso'", "'as'", "'case'", "'datatype'", "'do'", "'else'", 
		"'end'", "'exception'", "'fn'", "'fun'", "'handle'", "'if'", "'in'", "'infix'", 
		"'infixr'", "'let'", "'local'", "'nonfix'", "'of'", "'op'", "'open'", 
		"'orelse'", "'raise'", "'rec'", "'then'", "'type'", "'val'", "'with'", 
		"'withtype'", "'while'", "'true'", "'false'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "CHAR", "STR", "BOOL", "REAL", "INT", 
		"ABSTYPE", "AND", "ANDALSO", "AS", "CASE", "DATATYPE", "DO", "ELSE", "END", 
		"EXCEPTION", "FN", "FUN", "HANDLE", "IF", "IN", "INFIX", "INFIXR", "LET", 
		"LOCAL", "NONFIX", "OF", "OP", "OPEN", "ORELSE", "RAISE", "REC", "THEN", 
		"TYPE", "VAL", "WITH", "WITHTYPE", "WHILE", "TRUE", "FALSE", "DIGIT", 
		"LETTER", "NEWLINE", "WHITESPACE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(smlLexer._LITERAL_NAMES, smlLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return smlLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(smlLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "sml.g4"; }

	// @Override
	public get ruleNames(): string[] { return smlLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return smlLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return smlLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return smlLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02K\u01C3\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x03\x02\x03\x02\x03\x03\x03\x03\x03" +
		"\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03" +
		"\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03" +
		"\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03" +
		"\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03" +
		"\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03" +
		"\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03" +
		" \x03 \x03 \x03 \x03 \x03 \x05 \xD9\n \x03 \x03 \x03!\x03!\x03!\x03!\x07" +
		"!\xE1\n!\f!\x0E!\xE4\v!\x03!\x03!\x03\"\x03\"\x05\"\xEA\n\"\x03#\x06#" +
		"\xED\n#\r#\x0E#\xEE\x03#\x03#\x06#\xF3\n#\r#\x0E#\xF4\x03$\x06$\xF8\n" +
		"$\r$\x0E$\xF9\x03%\x03%\x03%\x03%\x03%\x03%\x03%\x03%\x03&\x03&\x03&\x03" +
		"&\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03(\x03(\x03(\x03)" +
		"\x03)\x03)\x03)\x03)\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03*\x03" +
		"+\x03+\x03+\x03,\x03,\x03,\x03,\x03,\x03-\x03-\x03-\x03-\x03.\x03.\x03" +
		".\x03.\x03.\x03.\x03.\x03.\x03.\x03.\x03/\x03/\x03/\x030\x030\x030\x03" +
		"0\x031\x031\x031\x031\x031\x031\x031\x032\x032\x032\x033\x033\x033\x03" +
		"4\x034\x034\x034\x034\x034\x035\x035\x035\x035\x035\x035\x035\x036\x03" +
		"6\x036\x036\x037\x037\x037\x037\x037\x037\x038\x038\x038\x038\x038\x03" +
		"8\x038\x039\x039\x039\x03:\x03:\x03:\x03;\x03;\x03;\x03;\x03;\x03<\x03" +
		"<\x03<\x03<\x03<\x03<\x03<\x03=\x03=\x03=\x03=\x03=\x03=\x03>\x03>\x03" +
		">\x03>\x03?\x03?\x03?\x03?\x03?\x03@\x03@\x03@\x03@\x03@\x03A\x03A\x03" +
		"A\x03A\x03B\x03B\x03B\x03B\x03B\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x03" +
		"C\x03C\x03D\x03D\x03D\x03D\x03D\x03D\x03E\x03E\x03E\x03E\x03E\x03F\x03" +
		"F\x03F\x03F\x03F\x03F\x03G\x03G\x03H\x03H\x03I\x05I\u01B7\nI\x03I\x03" +
		"I\x05I\u01BB\nI\x03J\x06J\u01BE\nJ\rJ\x0EJ\u01BF\x03J\x03J\x02\x02\x02" +
		"K\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F" +
		"\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F" +
		"\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16" +
		"+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E" +
		";\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02" +
		")Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x02" +
		"5i\x026k\x027m\x028o\x029q\x02:s\x02;u\x02<w\x02=y\x02>{\x02?}\x02@\x7F" +
		"\x02A\x81\x02B\x83\x02C\x85\x02D\x87\x02E\x89\x02F\x8B\x02G\x8D\x02H\x8F" +
		"\x02I\x91\x02J\x93\x02K\x03\x02\x05\x03\x022;\x04\x02C\\c|\x04\x02\v\v" +
		"\"\"\x02\u01CE\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07" +
		"\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03" +
		"\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03" +
		"\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03" +
		"\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03" +
		"\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02" +
		"\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02" +
		"-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02" +
		"\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03" +
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02" +
		"\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02" +
		"O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02" +
		"\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02" +
		"\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03" +
		"\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02" +
		"\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02" +
		"q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02" +
		"\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02" +
		"\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02" +
		"\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02" +
		"\x02\x8B\x03\x02\x02\x02\x02\x8D\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02" +
		"\x02\x91\x03\x02\x02\x02\x02\x93\x03\x02\x02\x02\x03\x95\x03\x02\x02\x02" +
		"\x05\x97\x03\x02\x02\x02\x07\x99\x03\x02\x02\x02\t\x9B\x03\x02\x02\x02" +
		"\v\x9D\x03\x02\x02\x02\r\x9F\x03\x02\x02\x02\x0F\xA1\x03\x02\x02\x02\x11" +
		"\xA3\x03\x02\x02\x02\x13\xA5\x03\x02\x02\x02\x15\xA7\x03\x02\x02\x02\x17" +
		"\xA9\x03\x02\x02\x02\x19\xAC\x03\x02\x02\x02\x1B\xAE\x03\x02\x02\x02\x1D" +
		"\xB0\x03\x02\x02\x02\x1F\xB2\x03\x02\x02\x02!\xB4\x03\x02\x02\x02#\xB6" +
		"\x03\x02\x02\x02%\xB8\x03\x02\x02\x02\'\xBA\x03\x02\x02\x02)\xBC\x03\x02" +
		"\x02\x02+\xBE\x03\x02\x02\x02-\xC0\x03\x02\x02\x02/\xC2\x03\x02\x02\x02" +
		"1\xC4\x03\x02\x02\x023\xC6\x03\x02\x02\x025\xC8\x03\x02\x02\x027\xCA\x03" +
		"\x02\x02\x029\xCC\x03\x02\x02\x02;\xCE\x03\x02\x02\x02=\xD0\x03\x02\x02" +
		"\x02?\xD2\x03\x02\x02\x02A\xDC\x03\x02\x02\x02C\xE9\x03\x02\x02\x02E\xEC" +
		"\x03\x02\x02\x02G\xF7\x03\x02\x02\x02I\xFB\x03\x02\x02\x02K\u0103\x03" +
		"\x02\x02\x02M\u0107\x03\x02\x02\x02O\u010F\x03\x02\x02\x02Q\u0112\x03" +
		"\x02\x02\x02S\u0117\x03\x02\x02\x02U\u0120\x03\x02\x02\x02W\u0123\x03" +
		"\x02\x02\x02Y\u0128\x03\x02\x02\x02[\u012C\x03\x02\x02\x02]\u0136\x03" +
		"\x02\x02\x02_\u0139\x03\x02\x02\x02a\u013D\x03\x02\x02\x02c\u0144\x03" +
		"\x02\x02\x02e\u0147\x03\x02\x02\x02g\u014A\x03\x02\x02\x02i\u0150\x03" +
		"\x02\x02\x02k\u0157\x03\x02\x02\x02m\u015B\x03\x02\x02\x02o\u0161\x03" +
		"\x02\x02\x02q\u0168\x03\x02\x02\x02s\u016B\x03\x02\x02\x02u\u016E\x03" +
		"\x02\x02\x02w\u0173\x03\x02\x02\x02y\u017A\x03\x02\x02\x02{\u0180\x03" +
		"\x02\x02\x02}\u0184\x03\x02\x02\x02\x7F\u0189\x03\x02\x02\x02\x81\u018E" +
		"\x03\x02\x02\x02\x83\u0192\x03\x02\x02\x02\x85\u0197\x03\x02\x02\x02\x87" +
		"\u01A0\x03\x02\x02\x02\x89\u01A6\x03\x02\x02\x02\x8B\u01AB\x03\x02\x02" +
		"\x02\x8D\u01B1\x03\x02\x02\x02\x8F\u01B3\x03\x02\x02\x02\x91\u01BA\x03" +
		"\x02\x02\x02\x93\u01BD\x03\x02\x02\x02\x95\x96\x07=\x02\x02\x96\x04\x03" +
		"\x02\x02\x02\x97\x98\x07?\x02\x02\x98\x06\x03\x02\x02\x02\x99\x9A\x07" +
		"*\x02\x02\x9A\b\x03\x02\x02\x02\x9B\x9C\x07.\x02\x02\x9C\n\x03\x02\x02" +
		"\x02\x9D\x9E\x07+\x02\x02\x9E\f\x03\x02\x02\x02\x9F\xA0\x07]\x02\x02\xA0" +
		"\x0E\x03\x02\x02\x02\xA1\xA2\x07_\x02\x02\xA2\x10\x03\x02\x02\x02\xA3" +
		"\xA4\x07}\x02\x02\xA4\x12\x03\x02\x02\x02\xA5\xA6\x07\x7F\x02\x02\xA6" +
		"\x14\x03\x02\x02\x02\xA7\xA8\x07%\x02\x02\xA8\x16\x03\x02\x02\x02\xA9" +
		"\xAA\x07?\x02\x02\xAA\xAB\x07@\x02\x02\xAB\x18\x03\x02\x02\x02\xAC\xAD" +
		"\x07)\x02\x02\xAD\x1A\x03\x02\x02\x02\xAE\xAF\x07a\x02\x02\xAF\x1C\x03" +
		"\x02\x02\x02\xB0\xB1\x07#\x02\x02\xB1\x1E\x03\x02\x02\x02\xB2\xB3\x07" +
		"\'\x02\x02\xB3 \x03\x02\x02\x02\xB4\xB5\x07(\x02\x02\xB5\"\x03\x02\x02" +
		"\x02\xB6\xB7\x07&\x02\x02\xB7$\x03\x02\x02\x02\xB8\xB9\x07-\x02\x02\xB9" +
		"&\x03\x02\x02\x02\xBA\xBB\x07/\x02\x02\xBB(\x03\x02\x02\x02\xBC\xBD\x07" +
		"1\x02\x02\xBD*\x03\x02\x02\x02\xBE\xBF\x07<\x02\x02\xBF,\x03\x02\x02\x02" +
		"\xC0\xC1\x07>\x02\x02\xC1.\x03\x02\x02\x02\xC2\xC3\x07@\x02\x02\xC30\x03" +
		"\x02\x02\x02\xC4\xC5\x07A\x02\x02\xC52\x03\x02\x02\x02\xC6\xC7\x07B\x02" +
		"\x02\xC74\x03\x02\x02\x02\xC8\xC9\x07^\x02\x02\xC96\x03\x02\x02\x02\xCA" +
		"\xCB\x07\x80\x02\x02\xCB8\x03\x02\x02\x02\xCC\xCD\x07`\x02\x02\xCD:\x03" +
		"\x02\x02\x02\xCE\xCF\x07~\x02\x02\xCF<\x03\x02\x02\x02\xD0\xD1\x07,\x02" +
		"\x02\xD1>\x03\x02\x02\x02\xD2\xD3\x07%\x02\x02\xD3\xD4\x07$\x02\x02\xD4" +
		"\xD8\x03\x02\x02\x02\xD5\xD9\x05\x93J\x02\xD6\xD9\x05\x8DG\x02\xD7\xD9" +
		"\x05\x8FH\x02\xD8\xD5\x03\x02\x02\x02\xD8\xD6\x03\x02\x02\x02\xD8\xD7" +
		"\x03\x02\x02\x02\xD9\xDA\x03\x02\x02\x02\xDA\xDB\x07$\x02\x02\xDB@\x03" +
		"\x02\x02\x02\xDC\xE2\x07$\x02\x02\xDD\xE1\x05\x93J\x02\xDE\xE1\x05\x8D" +
		"G\x02\xDF\xE1\x05\x8FH\x02\xE0\xDD\x03\x02\x02\x02\xE0\xDE\x03\x02\x02" +
		"\x02\xE0\xDF\x03\x02\x02\x02\xE1\xE4\x03\x02\x02\x02\xE2\xE0\x03\x02\x02" +
		"\x02\xE2\xE3\x03\x02\x02\x02\xE3\xE5\x03\x02\x02\x02\xE4\xE2\x03\x02\x02" +
		"\x02\xE5\xE6\x07$\x02\x02\xE6B\x03\x02\x02\x02\xE7\xEA\x05\x89E\x02\xE8" +
		"\xEA\x05\x8BF\x02\xE9\xE7\x03\x02\x02\x02\xE9\xE8\x03\x02\x02\x02\xEA" +
		"D\x03\x02\x02\x02\xEB\xED\x05\x8DG\x02\xEC\xEB\x03\x02\x02\x02\xED\xEE" +
		"\x03\x02\x02\x02\xEE\xEC\x03\x02\x02\x02\xEE\xEF\x03\x02\x02\x02\xEF\xF0" +
		"\x03\x02\x02\x02\xF0\xF2\x070\x02\x02\xF1\xF3\x05\x8DG\x02\xF2\xF1\x03" +
		"\x02\x02\x02\xF3\xF4\x03\x02\x02\x02\xF4\xF2\x03\x02\x02\x02\xF4\xF5\x03" +
		"\x02\x02\x02\xF5F\x03\x02\x02\x02\xF6\xF8\x05\x8DG\x02\xF7\xF6\x03\x02" +
		"\x02\x02\xF8\xF9\x03\x02\x02\x02\xF9\xF7\x03\x02\x02\x02\xF9\xFA\x03\x02" +
		"\x02\x02\xFAH\x03\x02\x02\x02\xFB\xFC\x07c\x02\x02\xFC\xFD\x07d\x02\x02" +
		"\xFD\xFE\x07u\x02\x02\xFE\xFF\x07v\x02\x02\xFF\u0100\x07{\x02\x02\u0100" +
		"\u0101\x07r\x02\x02\u0101\u0102\x07g\x02\x02\u0102J\x03\x02\x02\x02\u0103" +
		"\u0104\x07c\x02\x02\u0104\u0105\x07p\x02\x02\u0105\u0106\x07f\x02\x02" +
		"\u0106L\x03\x02\x02\x02\u0107\u0108\x07c\x02\x02\u0108\u0109\x07p\x02" +
		"\x02\u0109\u010A\x07f\x02\x02\u010A\u010B\x07c\x02\x02\u010B\u010C\x07" +
		"n\x02\x02\u010C\u010D\x07u\x02\x02\u010D\u010E\x07q\x02\x02\u010EN\x03" +
		"\x02\x02\x02\u010F\u0110\x07c\x02\x02\u0110\u0111\x07u\x02\x02\u0111P" +
		"\x03\x02\x02\x02\u0112\u0113\x07e\x02\x02\u0113\u0114\x07c\x02\x02\u0114" +
		"\u0115\x07u\x02\x02\u0115\u0116\x07g\x02\x02\u0116R\x03\x02\x02\x02\u0117" +
		"\u0118\x07f\x02\x02\u0118\u0119\x07c\x02\x02\u0119\u011A\x07v\x02\x02" +
		"\u011A\u011B\x07c\x02\x02\u011B\u011C\x07v\x02\x02\u011C\u011D\x07{\x02" +
		"\x02\u011D\u011E\x07r\x02\x02\u011E\u011F\x07g\x02\x02\u011FT\x03\x02" +
		"\x02\x02\u0120\u0121\x07f\x02\x02\u0121\u0122\x07q\x02\x02\u0122V\x03" +
		"\x02\x02\x02\u0123\u0124\x07g\x02\x02\u0124\u0125\x07n\x02\x02\u0125\u0126" +
		"\x07u\x02\x02\u0126\u0127\x07g\x02\x02\u0127X\x03\x02\x02\x02\u0128\u0129" +
		"\x07g\x02\x02\u0129\u012A\x07p\x02\x02\u012A\u012B\x07f\x02\x02\u012B" +
		"Z\x03\x02\x02\x02\u012C\u012D\x07g\x02\x02\u012D\u012E\x07z\x02\x02\u012E" +
		"\u012F\x07e\x02\x02\u012F\u0130\x07g\x02\x02\u0130\u0131\x07r\x02\x02" +
		"\u0131\u0132\x07v\x02\x02\u0132\u0133\x07k\x02\x02\u0133\u0134\x07q\x02" +
		"\x02\u0134\u0135\x07p\x02\x02\u0135\\\x03\x02\x02\x02\u0136\u0137\x07" +
		"h\x02\x02\u0137\u0138\x07p\x02\x02\u0138^\x03\x02\x02\x02\u0139\u013A" +
		"\x07h\x02\x02\u013A\u013B\x07w\x02\x02\u013B\u013C\x07p\x02\x02\u013C" +
		"`\x03\x02\x02\x02\u013D\u013E\x07j\x02\x02\u013E\u013F\x07c\x02\x02\u013F" +
		"\u0140\x07p\x02\x02\u0140\u0141\x07f\x02\x02\u0141\u0142\x07n\x02\x02" +
		"\u0142\u0143\x07g\x02\x02\u0143b\x03\x02\x02\x02\u0144\u0145\x07k\x02" +
		"\x02\u0145\u0146\x07h\x02\x02\u0146d\x03\x02\x02\x02\u0147\u0148\x07k" +
		"\x02\x02\u0148\u0149\x07p\x02\x02\u0149f\x03\x02\x02\x02\u014A\u014B\x07" +
		"k\x02\x02\u014B\u014C\x07p\x02\x02\u014C\u014D\x07h\x02\x02\u014D\u014E" +
		"\x07k\x02\x02\u014E\u014F\x07z\x02\x02\u014Fh\x03\x02\x02\x02\u0150\u0151" +
		"\x07k\x02\x02\u0151\u0152\x07p\x02\x02\u0152\u0153\x07h\x02\x02\u0153" +
		"\u0154\x07k\x02\x02\u0154\u0155\x07z\x02\x02\u0155\u0156\x07t\x02\x02" +
		"\u0156j\x03\x02\x02\x02\u0157\u0158\x07n\x02\x02\u0158\u0159\x07g\x02" +
		"\x02\u0159\u015A\x07v\x02\x02\u015Al\x03\x02\x02\x02\u015B\u015C\x07n" +
		"\x02\x02\u015C\u015D\x07q\x02\x02\u015D\u015E\x07e\x02\x02\u015E\u015F" +
		"\x07c\x02\x02\u015F\u0160\x07n\x02\x02\u0160n\x03\x02\x02\x02\u0161\u0162" +
		"\x07p\x02\x02\u0162\u0163\x07q\x02\x02\u0163\u0164\x07p\x02\x02\u0164" +
		"\u0165\x07h\x02\x02\u0165\u0166\x07k\x02\x02\u0166\u0167\x07z\x02\x02" +
		"\u0167p\x03\x02\x02\x02\u0168\u0169\x07q\x02\x02\u0169\u016A\x07h\x02" +
		"\x02\u016Ar\x03\x02\x02\x02\u016B\u016C\x07q\x02\x02\u016C\u016D\x07r" +
		"\x02\x02\u016Dt\x03\x02\x02\x02\u016E\u016F\x07q\x02\x02\u016F\u0170\x07" +
		"r\x02\x02\u0170\u0171\x07g\x02\x02\u0171\u0172\x07p\x02\x02\u0172v\x03" +
		"\x02\x02\x02\u0173\u0174\x07q\x02\x02\u0174\u0175\x07t\x02\x02\u0175\u0176" +
		"\x07g\x02\x02\u0176\u0177\x07n\x02\x02\u0177\u0178\x07u\x02\x02\u0178" +
		"\u0179\x07g\x02\x02\u0179x\x03\x02\x02\x02\u017A\u017B\x07t\x02\x02\u017B" +
		"\u017C\x07c\x02\x02\u017C\u017D\x07k\x02\x02\u017D\u017E\x07u\x02\x02" +
		"\u017E\u017F\x07g\x02\x02\u017Fz\x03\x02\x02\x02\u0180\u0181\x07t\x02" +
		"\x02\u0181\u0182\x07g\x02\x02\u0182\u0183\x07e\x02\x02\u0183|\x03\x02" +
		"\x02\x02\u0184\u0185\x07v\x02\x02\u0185\u0186\x07j\x02\x02\u0186\u0187" +
		"\x07g\x02\x02\u0187\u0188\x07p\x02\x02\u0188~\x03\x02\x02\x02\u0189\u018A" +
		"\x07v\x02\x02\u018A\u018B\x07{\x02\x02\u018B\u018C\x07r\x02\x02\u018C" +
		"\u018D\x07g\x02\x02\u018D\x80\x03\x02\x02\x02\u018E\u018F\x07x\x02\x02" +
		"\u018F\u0190\x07c\x02\x02\u0190\u0191\x07n\x02\x02\u0191\x82\x03\x02\x02" +
		"\x02\u0192\u0193\x07y\x02\x02\u0193\u0194\x07k\x02\x02\u0194\u0195\x07" +
		"v\x02\x02\u0195\u0196\x07j\x02\x02\u0196\x84\x03\x02\x02\x02\u0197\u0198" +
		"\x07y\x02\x02\u0198\u0199\x07k\x02\x02\u0199\u019A\x07v\x02\x02\u019A" +
		"\u019B\x07j\x02\x02\u019B\u019C\x07v\x02\x02\u019C\u019D\x07{\x02\x02" +
		"\u019D\u019E\x07r\x02\x02\u019E\u019F\x07g\x02\x02\u019F\x86\x03\x02\x02" +
		"\x02\u01A0\u01A1\x07y\x02\x02\u01A1\u01A2\x07j\x02\x02\u01A2\u01A3\x07" +
		"k\x02\x02\u01A3\u01A4\x07n\x02\x02\u01A4\u01A5\x07g\x02\x02\u01A5\x88" +
		"\x03\x02\x02\x02\u01A6\u01A7\x07v\x02\x02\u01A7\u01A8\x07t\x02\x02\u01A8" +
		"\u01A9\x07w\x02\x02\u01A9\u01AA\x07g\x02\x02\u01AA\x8A\x03\x02\x02\x02" +
		"\u01AB\u01AC\x07h\x02\x02\u01AC\u01AD\x07c\x02\x02\u01AD\u01AE\x07n\x02" +
		"\x02\u01AE\u01AF\x07u\x02\x02\u01AF\u01B0\x07g\x02\x02\u01B0\x8C\x03\x02" +
		"\x02\x02\u01B1\u01B2\t\x02\x02\x02\u01B2\x8E\x03\x02\x02\x02\u01B3\u01B4" +
		"\t\x03\x02\x02\u01B4\x90\x03\x02\x02\x02\u01B5\u01B7\x07\x0F\x02\x02\u01B6" +
		"\u01B5\x03\x02\x02\x02\u01B6\u01B7\x03\x02\x02\x02\u01B7\u01B8\x03\x02" +
		"\x02\x02\u01B8\u01BB\x07\f\x02\x02\u01B9\u01BB\x07\x0F\x02\x02\u01BA\u01B6" +
		"\x03\x02\x02\x02\u01BA\u01B9\x03\x02\x02\x02\u01BB\x92\x03\x02\x02\x02" +
		"\u01BC\u01BE\t\x04\x02\x02\u01BD\u01BC\x03\x02\x02\x02\u01BE\u01BF\x03" +
		"\x02\x02\x02\u01BF\u01BD\x03\x02\x02\x02\u01BF\u01C0\x03\x02\x02\x02\u01C0" +
		"\u01C1\x03\x02\x02\x02\u01C1\u01C2\bJ\x02\x02\u01C2\x94\x03\x02\x02\x02" +
		"\r\x02\xD8\xE0\xE2\xE9\xEE\xF4\xF9\u01B6\u01BA\u01BF\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!smlLexer.__ATN) {
			smlLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(smlLexer._serializedATN));
		}

		return smlLexer.__ATN;
	}

}

