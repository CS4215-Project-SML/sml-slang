// Generated from ./src/lang/sml.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class smlLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly DIGIT = 29;
	public static readonly TRUE = 30;
	public static readonly FALSE = 31;
	public static readonly LETTER = 32;
	public static readonly ASCII = 33;
	public static readonly WHITESPACE = 34;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "DIGIT", "TRUE", "FALSE", "LETTER", "ASCII", 
		"WHITESPACE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'.'", "'#\"'", "'\"'", "'''", "'_'", "'!'", "'%'", "'&'", 
		"'$'", "'#'", "'+'", "'-'", "'/'", "':'", "'<'", "'='", "'>'", "'?'", 
		"'@'", "'\\'", "'~'", "'^'", "'|'", "'*'", "'('", "')'", "'->'", "';'", 
		undefined, "'true'", "'false'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "DIGIT", "TRUE", "FALSE", "LETTER", "ASCII", "WHITESPACE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(smlLexer._LITERAL_NAMES, smlLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return smlLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(smlLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "sml.g4"; }

	// @Override
	public get ruleNames(): string[] { return smlLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return smlLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return smlLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return smlLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02$\x99\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t\x12" +
		"\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t\x17" +
		"\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t\x1C" +
		"\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t\"\x04" +
		"#\t#\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03" +
		"\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F" +
		"\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14" +
		"\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18" +
		"\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1C" +
		"\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F" +
		"\x03 \x03 \x03 \x03 \x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x06#\x94\n#" +
		"\r#\x0E#\x95\x03#\x03#\x02\x02\x02$\x03\x02\x03\x05\x02\x04\x07\x02\x05" +
		"\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
		"\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13" +
		"%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02" +
		"\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02" +
		"$\x03\x02\x06\x03\x022;\x04\x02C\\c|\x03\x02\"\x80\x05\x02\v\f\x0F\x0F" +
		"\"\"\x02\x99\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03" +
		"\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02" +
		"\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02" +
		"\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02" +
		"\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02" +
		"\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02" +
		"\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-" +
		"\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02" +
		"\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03" +
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x03G\x03\x02\x02" +
		"\x02\x05I\x03\x02\x02\x02\x07L\x03\x02\x02\x02\tN\x03\x02\x02\x02\vP\x03" +
		"\x02\x02\x02\rR\x03\x02\x02\x02\x0FT\x03\x02\x02\x02\x11V\x03\x02\x02" +
		"\x02\x13X\x03\x02\x02\x02\x15Z\x03\x02\x02\x02\x17\\\x03\x02\x02\x02\x19" +
		"^\x03\x02\x02\x02\x1B`\x03\x02\x02\x02\x1Db\x03\x02\x02\x02\x1Fd\x03\x02" +
		"\x02\x02!f\x03\x02\x02\x02#h\x03\x02\x02\x02%j\x03\x02\x02\x02\'l\x03" +
		"\x02\x02\x02)n\x03\x02\x02\x02+p\x03\x02\x02\x02-r\x03\x02\x02\x02/t\x03" +
		"\x02\x02\x021v\x03\x02\x02\x023x\x03\x02\x02\x025z\x03\x02\x02\x027|\x03" +
		"\x02\x02\x029\x7F\x03\x02\x02\x02;\x81\x03\x02\x02\x02=\x83\x03\x02\x02" +
		"\x02?\x88\x03\x02\x02\x02A\x8E\x03\x02\x02\x02C\x90\x03\x02\x02\x02E\x93" +
		"\x03\x02\x02\x02GH\x070\x02\x02H\x04\x03\x02\x02\x02IJ\x07%\x02\x02JK" +
		"\x07$\x02\x02K\x06\x03\x02\x02\x02LM\x07$\x02\x02M\b\x03\x02\x02\x02N" +
		"O\x07)\x02\x02O\n\x03\x02\x02\x02PQ\x07a\x02\x02Q\f\x03\x02\x02\x02RS" +
		"\x07#\x02\x02S\x0E\x03\x02\x02\x02TU\x07\'\x02\x02U\x10\x03\x02\x02\x02" +
		"VW\x07(\x02\x02W\x12\x03\x02\x02\x02XY\x07&\x02\x02Y\x14\x03\x02\x02\x02" +
		"Z[\x07%\x02\x02[\x16\x03\x02\x02\x02\\]\x07-\x02\x02]\x18\x03\x02\x02" +
		"\x02^_\x07/\x02\x02_\x1A\x03\x02\x02\x02`a\x071\x02\x02a\x1C\x03\x02\x02" +
		"\x02bc\x07<\x02\x02c\x1E\x03\x02\x02\x02de\x07>\x02\x02e \x03\x02\x02" +
		"\x02fg\x07?\x02\x02g\"\x03\x02\x02\x02hi\x07@\x02\x02i$\x03\x02\x02\x02" +
		"jk\x07A\x02\x02k&\x03\x02\x02\x02lm\x07B\x02\x02m(\x03\x02\x02\x02no\x07" +
		"^\x02\x02o*\x03\x02\x02\x02pq\x07\x80\x02\x02q,\x03\x02\x02\x02rs\x07" +
		"`\x02\x02s.\x03\x02\x02\x02tu\x07~\x02\x02u0\x03\x02\x02\x02vw\x07,\x02" +
		"\x02w2\x03\x02\x02\x02xy\x07*\x02\x02y4\x03\x02\x02\x02z{\x07+\x02\x02" +
		"{6\x03\x02\x02\x02|}\x07/\x02\x02}~\x07@\x02\x02~8\x03\x02\x02\x02\x7F" +
		"\x80\x07=\x02\x02\x80:\x03\x02\x02\x02\x81\x82\t\x02\x02\x02\x82<\x03" +
		"\x02\x02\x02\x83\x84\x07v\x02\x02\x84\x85\x07t\x02\x02\x85\x86\x07w\x02" +
		"\x02\x86\x87\x07g\x02\x02\x87>\x03\x02\x02\x02\x88\x89\x07h\x02\x02\x89" +
		"\x8A\x07c\x02\x02\x8A\x8B\x07n\x02\x02\x8B\x8C\x07u\x02\x02\x8C\x8D\x07" +
		"g\x02\x02\x8D@\x03\x02\x02\x02\x8E\x8F\t\x03\x02\x02\x8FB\x03\x02\x02" +
		"\x02\x90\x91\t\x04\x02\x02\x91D\x03\x02\x02\x02\x92\x94\t\x05\x02\x02" +
		"\x93\x92\x03\x02\x02\x02\x94\x95\x03\x02\x02\x02\x95\x93\x03\x02\x02\x02" +
		"\x95\x96\x03\x02\x02\x02\x96\x97\x03\x02\x02\x02\x97\x98\b#\x02\x02\x98" +
		"F\x03\x02\x02\x02\x04\x02\x95\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!smlLexer.__ATN) {
			smlLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(smlLexer._serializedATN));
		}

		return smlLexer.__ATN;
	}

}

