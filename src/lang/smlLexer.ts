// Generated from ./src/lang/sml.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class smlLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly CHAR = 24;
	public static readonly STR = 25;
	public static readonly REAL = 26;
	public static readonly INT = 27;
	public static readonly BOOL = 28;
	public static readonly ABSTYPE = 29;
	public static readonly AND = 30;
	public static readonly ANDALSO = 31;
	public static readonly AS = 32;
	public static readonly CASE = 33;
	public static readonly DATATYPE = 34;
	public static readonly DO = 35;
	public static readonly ELSE = 36;
	public static readonly END = 37;
	public static readonly EXCEPTION = 38;
	public static readonly FN = 39;
	public static readonly FUN = 40;
	public static readonly HANDLE = 41;
	public static readonly IF = 42;
	public static readonly IN = 43;
	public static readonly INFIX = 44;
	public static readonly INFIXR = 45;
	public static readonly LET = 46;
	public static readonly LOCAL = 47;
	public static readonly NONFIX = 48;
	public static readonly OF = 49;
	public static readonly OP = 50;
	public static readonly OPEN = 51;
	public static readonly ORELSE = 52;
	public static readonly RAISE = 53;
	public static readonly REC = 54;
	public static readonly THEN = 55;
	public static readonly TYPE = 56;
	public static readonly VAL = 57;
	public static readonly WITH = 58;
	public static readonly WITHTYPE = 59;
	public static readonly WHILE = 60;
	public static readonly TRUE = 61;
	public static readonly FALSE = 62;
	public static readonly ID = 63;
	public static readonly DIGIT = 64;
	public static readonly LETTER = 65;
	public static readonly NEWLINE = 66;
	public static readonly WHITESPACE = 67;
	public static readonly COMMENT = 68;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "CHAR", "STR", "REAL", 
		"INT", "BOOL", "ABSTYPE", "AND", "ANDALSO", "AS", "CASE", "DATATYPE", 
		"DO", "ELSE", "END", "EXCEPTION", "FN", "FUN", "HANDLE", "IF", "IN", "INFIX", 
		"INFIXR", "LET", "LOCAL", "NONFIX", "OF", "OP", "OPEN", "ORELSE", "RAISE", 
		"REC", "THEN", "TYPE", "VAL", "WITH", "WITHTYPE", "WHILE", "TRUE", "FALSE", 
		"ID", "DIGIT", "LETTER", "NEWLINE", "WHITESPACE", "COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'='", "'|'", "'::'", "'('", "','", "')'", "'{'", "'}'", 
		"'['", "']'", "'=>'", "'*'", "'/'", "'+'", "'-'", "'^'", "'<>'", "'<'", 
		"'<='", "'>'", "'>='", "'#'", undefined, undefined, undefined, undefined, 
		undefined, "'abstype'", "'and'", "'andalso'", "'as'", "'case'", "'datatype'", 
		"'do'", "'else'", "'end'", "'exception'", "'fn'", "'fun'", "'handle'", 
		"'if'", "'in'", "'infix'", "'infixr'", "'let'", "'local'", "'nonfix'", 
		"'of'", "'op'", "'open'", "'orelse'", "'raise'", "'rec'", "'then'", "'type'", 
		"'val'", "'with'", "'withtype'", "'while'", "'true'", "'false'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, "CHAR", "STR", "REAL", "INT", "BOOL", 
		"ABSTYPE", "AND", "ANDALSO", "AS", "CASE", "DATATYPE", "DO", "ELSE", "END", 
		"EXCEPTION", "FN", "FUN", "HANDLE", "IF", "IN", "INFIX", "INFIXR", "LET", 
		"LOCAL", "NONFIX", "OF", "OP", "OPEN", "ORELSE", "RAISE", "REC", "THEN", 
		"TYPE", "VAL", "WITH", "WITHTYPE", "WHILE", "TRUE", "FALSE", "ID", "DIGIT", 
		"LETTER", "NEWLINE", "WHITESPACE", "COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(smlLexer._LITERAL_NAMES, smlLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return smlLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(smlLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "sml.g4"; }

	// @Override
	public get ruleNames(): string[] { return smlLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return smlLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return smlLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return smlLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02F\u01CF\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x03" +
		"\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v" +
		"\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03" +
		"\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03" +
		"\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03" +
		"\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x05" +
		"\x19\xC5\n\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x07\x1A" +
		"\xCD\n\x1A\f\x1A\x0E\x1A\xD0\v\x1A\x03\x1A\x03\x1A\x03\x1B\x06\x1B\xD5" +
		"\n\x1B\r\x1B\x0E\x1B\xD6\x03\x1B\x03\x1B\x06\x1B\xDB\n\x1B\r\x1B\x0E\x1B" +
		"\xDC\x03\x1C\x06\x1C\xE0\n\x1C\r\x1C\x0E\x1C\xE1\x03\x1D\x03\x1D\x05\x1D" +
		"\xE6\n\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03" +
		"\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03 \x03 \x03" +
		" \x03 \x03!\x03!\x03!\x03\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03" +
		"#\x03#\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03%\x03%\x03%\x03%\x03%\x03" +
		"&\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'\x03\'" +
		"\x03\'\x03(\x03(\x03(\x03)\x03)\x03)\x03)\x03*\x03*\x03*\x03*\x03*\x03" +
		"*\x03*\x03+\x03+\x03+\x03,\x03,\x03,\x03-\x03-\x03-\x03-\x03-\x03-\x03" +
		".\x03.\x03.\x03.\x03.\x03.\x03.\x03/\x03/\x03/\x03/\x030\x030\x030\x03" +
		"0\x030\x030\x031\x031\x031\x031\x031\x031\x031\x032\x032\x032\x033\x03" +
		"3\x033\x034\x034\x034\x034\x034\x035\x035\x035\x035\x035\x035\x035\x03" +
		"6\x036\x036\x036\x036\x036\x037\x037\x037\x037\x038\x038\x038\x038\x03" +
		"8\x039\x039\x039\x039\x039\x03:\x03:\x03:\x03:\x03;\x03;\x03;\x03;\x03" +
		";\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03=\x03=\x03=\x03=\x03" +
		"=\x03=\x03>\x03>\x03>\x03>\x03>\x03?\x03?\x03?\x03?\x03?\x03?\x03@\x03" +
		"@\x03@\x03@\x07@\u01A2\n@\f@\x0E@\u01A5\v@\x03@\x06@\u01A8\n@\r@\x0E@" +
		"\u01A9\x05@\u01AC\n@\x03A\x03A\x03B\x03B\x03C\x05C\u01B3\nC\x03C\x03C" +
		"\x05C\u01B7\nC\x03C\x03C\x03D\x06D\u01BC\nD\rD\x0ED\u01BD\x03D\x03D\x03" +
		"E\x03E\x03E\x03E\x07E\u01C6\nE\fE\x0EE\u01C9\vE\x03E\x03E\x03E\x03E\x03" +
		"E\x03\u01C7\x02\x02F\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02" +
		"\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02" +
		"\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'" +
		"\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C" +
		"7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02" +
		"&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a" +
		"\x022c\x023e\x024g\x025i\x026k\x027m\x028o\x029q\x02:s\x02;u\x02<w\x02" +
		"=y\x02>{\x02?}\x02@\x7F\x02A\x81\x02B\x83\x02C\x85\x02D\x87\x02E\x89\x02" +
		"F\x03\x02\x07\x04\x02))aa\r\x02##%),-//11<<>B^^``~~\x80\x80\x03\x022;" +
		"\x04\x02C\\c|\x04\x02\v\v\"\"\x02\u01E0\x02\x03\x03\x02\x02\x02\x02\x05" +
		"\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03" +
		"\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03" +
		"\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03" +
		"\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03" +
		"\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02" +
		"\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02" +
		"\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03" +
		"\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02" +
		"\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02" +
		"?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02" +
		"\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02" +
		"\x02M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03" +
		"\x02\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02" +
		"\x02\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02" +
		"a\x03\x02\x02\x02\x02c\x03\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02" +
		"\x02\x02\x02i\x03\x02\x02\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02" +
		"\x02o\x03\x02\x02\x02\x02q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03" +
		"\x02\x02\x02\x02w\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02" +
		"\x02\x02}\x03\x02\x02\x02\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02" +
		"\x02\x02\x83\x03\x02\x02\x02\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02" +
		"\x02\x02\x89\x03\x02\x02\x02\x03\x8B\x03\x02\x02\x02\x05\x8D\x03\x02\x02" +
		"\x02\x07\x8F\x03\x02\x02\x02\t\x91\x03\x02\x02\x02\v\x94\x03\x02\x02\x02" +
		"\r\x96\x03\x02\x02\x02\x0F\x98\x03\x02\x02\x02\x11\x9A\x03\x02\x02\x02" +
		"\x13\x9C\x03\x02\x02\x02\x15\x9E\x03\x02\x02\x02\x17\xA0\x03\x02\x02\x02" +
		"\x19\xA2\x03\x02\x02\x02\x1B\xA5\x03\x02\x02\x02\x1D\xA7\x03\x02\x02\x02" +
		"\x1F\xA9\x03\x02\x02\x02!\xAB\x03\x02\x02\x02#\xAD\x03\x02\x02\x02%\xAF" +
		"\x03\x02\x02\x02\'\xB2\x03\x02\x02\x02)\xB4\x03\x02\x02\x02+\xB7\x03\x02" +
		"\x02\x02-\xB9\x03\x02\x02\x02/\xBC\x03\x02\x02\x021\xBE\x03\x02\x02\x02" +
		"3\xC8\x03\x02\x02\x025\xD4\x03\x02\x02\x027\xDF\x03\x02\x02\x029\xE5\x03" +
		"\x02\x02\x02;\xE7\x03\x02\x02\x02=\xEF\x03\x02\x02\x02?\xF3\x03\x02\x02" +
		"\x02A\xFB\x03\x02\x02\x02C\xFE\x03\x02\x02\x02E\u0103\x03\x02\x02\x02" +
		"G\u010C\x03\x02\x02\x02I\u010F\x03\x02\x02\x02K\u0114\x03\x02\x02\x02" +
		"M\u0118\x03\x02\x02\x02O\u0122\x03\x02\x02\x02Q\u0125\x03\x02\x02\x02" +
		"S\u0129\x03\x02\x02\x02U\u0130\x03\x02\x02\x02W\u0133\x03\x02\x02\x02" +
		"Y\u0136\x03\x02\x02\x02[\u013C\x03\x02\x02\x02]\u0143\x03\x02\x02\x02" +
		"_\u0147\x03\x02\x02\x02a\u014D\x03\x02\x02\x02c\u0154\x03\x02\x02\x02" +
		"e\u0157\x03\x02\x02\x02g\u015A\x03\x02\x02\x02i\u015F\x03\x02\x02\x02" +
		"k\u0166\x03\x02\x02\x02m\u016C\x03\x02\x02\x02o\u0170\x03\x02\x02\x02" +
		"q\u0175\x03\x02\x02\x02s\u017A\x03\x02\x02\x02u\u017E\x03\x02\x02\x02" +
		"w\u0183\x03\x02\x02\x02y\u018C\x03\x02\x02\x02{\u0192\x03\x02\x02\x02" +
		"}\u0197\x03\x02\x02\x02\x7F\u01AB\x03\x02\x02\x02\x81\u01AD\x03\x02\x02" +
		"\x02\x83\u01AF\x03\x02\x02\x02\x85\u01B6\x03\x02\x02\x02\x87\u01BB\x03" +
		"\x02\x02\x02\x89\u01C1\x03\x02\x02\x02\x8B\x8C\x07=\x02\x02\x8C\x04\x03" +
		"\x02\x02\x02\x8D\x8E\x07?\x02\x02\x8E\x06\x03\x02\x02\x02\x8F\x90\x07" +
		"~\x02\x02\x90\b\x03\x02\x02\x02\x91\x92\x07<\x02\x02\x92\x93\x07<\x02" +
		"\x02\x93\n\x03\x02\x02\x02\x94\x95\x07*\x02\x02\x95\f\x03\x02\x02\x02" +
		"\x96\x97\x07.\x02\x02\x97\x0E\x03\x02\x02\x02\x98\x99\x07+\x02\x02\x99" +
		"\x10\x03\x02\x02\x02\x9A\x9B\x07}\x02\x02\x9B\x12\x03\x02\x02\x02\x9C" +
		"\x9D\x07\x7F\x02\x02\x9D\x14\x03\x02\x02\x02\x9E\x9F\x07]\x02\x02\x9F" +
		"\x16\x03\x02\x02\x02\xA0\xA1\x07_\x02\x02\xA1\x18\x03\x02\x02\x02\xA2" +
		"\xA3\x07?\x02\x02\xA3\xA4\x07@\x02\x02\xA4\x1A\x03\x02\x02\x02\xA5\xA6" +
		"\x07,\x02\x02\xA6\x1C\x03\x02\x02\x02\xA7\xA8\x071\x02\x02\xA8\x1E\x03" +
		"\x02\x02\x02\xA9\xAA\x07-\x02\x02\xAA \x03\x02\x02\x02\xAB\xAC\x07/\x02" +
		"\x02\xAC\"\x03\x02\x02\x02\xAD\xAE\x07`\x02\x02\xAE$\x03\x02\x02\x02\xAF" +
		"\xB0\x07>\x02\x02\xB0\xB1\x07@\x02\x02\xB1&\x03\x02\x02\x02\xB2\xB3\x07" +
		">\x02\x02\xB3(\x03\x02\x02\x02\xB4\xB5\x07>\x02\x02\xB5\xB6\x07?\x02\x02" +
		"\xB6*\x03\x02\x02\x02\xB7\xB8\x07@\x02\x02\xB8,\x03\x02\x02\x02\xB9\xBA" +
		"\x07@\x02\x02\xBA\xBB\x07?\x02\x02\xBB.\x03\x02\x02\x02\xBC\xBD\x07%\x02" +
		"\x02\xBD0\x03\x02\x02\x02\xBE\xBF\x07%\x02\x02\xBF\xC0\x07$\x02\x02\xC0" +
		"\xC4\x03\x02\x02\x02\xC1\xC5\x05\x87D\x02\xC2\xC5\x05\x81A\x02\xC3\xC5" +
		"\x05\x83B\x02\xC4\xC1\x03\x02\x02\x02\xC4\xC2\x03\x02\x02\x02\xC4\xC3" +
		"\x03\x02\x02\x02\xC5\xC6\x03\x02\x02\x02\xC6\xC7\x07$\x02\x02\xC72\x03" +
		"\x02\x02\x02\xC8\xCE\x07$\x02\x02\xC9\xCD\x05\x87D\x02\xCA\xCD\x05\x81" +
		"A\x02\xCB\xCD\x05\x83B\x02\xCC\xC9\x03\x02\x02\x02\xCC\xCA\x03\x02\x02" +
		"\x02\xCC\xCB\x03\x02\x02\x02\xCD\xD0\x03\x02\x02\x02\xCE\xCC\x03\x02\x02" +
		"\x02\xCE\xCF\x03\x02\x02\x02\xCF\xD1\x03\x02\x02\x02\xD0\xCE\x03\x02\x02" +
		"\x02\xD1\xD2\x07$\x02\x02\xD24\x03\x02\x02\x02\xD3\xD5\x05\x81A\x02\xD4" +
		"\xD3\x03\x02\x02\x02\xD5\xD6\x03\x02\x02\x02\xD6\xD4\x03\x02\x02\x02\xD6" +
		"\xD7\x03\x02\x02\x02\xD7\xD8\x03\x02\x02\x02\xD8\xDA\x070\x02\x02\xD9" +
		"\xDB\x05\x81A\x02\xDA\xD9\x03\x02\x02\x02\xDB\xDC\x03\x02\x02\x02\xDC" +
		"\xDA\x03\x02\x02\x02\xDC\xDD\x03\x02\x02\x02\xDD6\x03\x02\x02\x02\xDE" +
		"\xE0\x05\x81A\x02\xDF\xDE\x03\x02\x02\x02\xE0\xE1\x03\x02\x02\x02\xE1" +
		"\xDF\x03\x02\x02\x02\xE1\xE2\x03\x02\x02\x02\xE28\x03\x02\x02\x02\xE3" +
		"\xE6\x05{>\x02\xE4\xE6\x05}?\x02\xE5\xE3\x03\x02\x02\x02\xE5\xE4\x03\x02" +
		"\x02\x02\xE6:\x03\x02\x02\x02\xE7\xE8\x07c\x02\x02\xE8\xE9\x07d\x02\x02" +
		"\xE9\xEA\x07u\x02\x02\xEA\xEB\x07v\x02\x02\xEB\xEC\x07{\x02\x02\xEC\xED" +
		"\x07r\x02\x02\xED\xEE\x07g\x02\x02\xEE<\x03\x02\x02\x02\xEF\xF0\x07c\x02" +
		"\x02\xF0\xF1\x07p\x02\x02\xF1\xF2\x07f\x02\x02\xF2>\x03\x02\x02\x02\xF3" +
		"\xF4\x07c\x02\x02\xF4\xF5\x07p\x02\x02\xF5\xF6\x07f\x02\x02\xF6\xF7\x07" +
		"c\x02\x02\xF7\xF8\x07n\x02\x02\xF8\xF9\x07u\x02\x02\xF9\xFA\x07q\x02\x02" +
		"\xFA@\x03\x02\x02\x02\xFB\xFC\x07c\x02\x02\xFC\xFD\x07u\x02\x02\xFDB\x03" +
		"\x02\x02\x02\xFE\xFF\x07e\x02\x02\xFF\u0100\x07c\x02\x02\u0100\u0101\x07" +
		"u\x02\x02\u0101\u0102\x07g\x02\x02\u0102D\x03\x02\x02\x02\u0103\u0104" +
		"\x07f\x02\x02\u0104\u0105\x07c\x02\x02\u0105\u0106\x07v\x02\x02\u0106" +
		"\u0107\x07c\x02\x02\u0107\u0108\x07v\x02\x02\u0108\u0109\x07{\x02\x02" +
		"\u0109\u010A\x07r\x02\x02\u010A\u010B\x07g\x02\x02\u010BF\x03\x02\x02" +
		"\x02\u010C\u010D\x07f\x02\x02\u010D\u010E\x07q\x02\x02\u010EH\x03\x02" +
		"\x02\x02\u010F\u0110\x07g\x02\x02\u0110\u0111\x07n\x02\x02\u0111\u0112" +
		"\x07u\x02\x02\u0112\u0113\x07g\x02\x02\u0113J\x03\x02\x02\x02\u0114\u0115" +
		"\x07g\x02\x02\u0115\u0116\x07p\x02\x02\u0116\u0117\x07f\x02\x02\u0117" +
		"L\x03\x02\x02\x02\u0118\u0119\x07g\x02\x02\u0119\u011A\x07z\x02\x02\u011A" +
		"\u011B\x07e\x02\x02\u011B\u011C\x07g\x02\x02\u011C\u011D\x07r\x02\x02" +
		"\u011D\u011E\x07v\x02\x02\u011E\u011F\x07k\x02\x02\u011F\u0120\x07q\x02" +
		"\x02\u0120\u0121\x07p\x02\x02\u0121N\x03\x02\x02\x02\u0122\u0123\x07h" +
		"\x02\x02\u0123\u0124\x07p\x02\x02\u0124P\x03\x02\x02\x02\u0125\u0126\x07" +
		"h\x02\x02\u0126\u0127\x07w\x02\x02\u0127\u0128\x07p\x02\x02\u0128R\x03" +
		"\x02\x02\x02\u0129\u012A\x07j\x02\x02\u012A\u012B\x07c\x02\x02\u012B\u012C" +
		"\x07p\x02\x02\u012C\u012D\x07f\x02\x02\u012D\u012E\x07n\x02\x02\u012E" +
		"\u012F\x07g\x02\x02\u012FT\x03\x02\x02\x02\u0130\u0131\x07k\x02\x02\u0131" +
		"\u0132\x07h\x02\x02\u0132V\x03\x02\x02\x02\u0133\u0134\x07k\x02\x02\u0134" +
		"\u0135\x07p\x02\x02\u0135X\x03\x02\x02\x02\u0136\u0137\x07k\x02\x02\u0137" +
		"\u0138\x07p\x02\x02\u0138\u0139\x07h\x02\x02\u0139\u013A\x07k\x02\x02" +
		"\u013A\u013B\x07z\x02\x02\u013BZ\x03\x02\x02\x02\u013C\u013D\x07k\x02" +
		"\x02\u013D\u013E\x07p\x02\x02\u013E\u013F\x07h\x02\x02\u013F\u0140\x07" +
		"k\x02\x02\u0140\u0141\x07z\x02\x02\u0141\u0142\x07t\x02\x02\u0142\\\x03" +
		"\x02\x02\x02\u0143\u0144\x07n\x02\x02\u0144\u0145\x07g\x02\x02\u0145\u0146" +
		"\x07v\x02\x02\u0146^\x03\x02\x02\x02\u0147\u0148\x07n\x02\x02\u0148\u0149" +
		"\x07q\x02\x02\u0149\u014A\x07e\x02\x02\u014A\u014B\x07c\x02\x02\u014B" +
		"\u014C\x07n\x02\x02\u014C`\x03\x02\x02\x02\u014D\u014E\x07p\x02\x02\u014E" +
		"\u014F\x07q\x02\x02\u014F\u0150\x07p\x02\x02\u0150\u0151\x07h\x02\x02" +
		"\u0151\u0152\x07k\x02\x02\u0152\u0153\x07z\x02\x02\u0153b\x03\x02\x02" +
		"\x02\u0154\u0155\x07q\x02\x02\u0155\u0156\x07h\x02\x02\u0156d\x03\x02" +
		"\x02\x02\u0157\u0158\x07q\x02\x02\u0158\u0159\x07r\x02\x02\u0159f\x03" +
		"\x02\x02\x02\u015A\u015B\x07q\x02\x02\u015B\u015C\x07r\x02\x02\u015C\u015D" +
		"\x07g\x02\x02\u015D\u015E\x07p\x02\x02\u015Eh\x03\x02\x02\x02\u015F\u0160" +
		"\x07q\x02\x02\u0160\u0161\x07t\x02\x02\u0161\u0162\x07g\x02\x02\u0162" +
		"\u0163\x07n\x02\x02\u0163\u0164\x07u\x02\x02\u0164\u0165\x07g\x02\x02" +
		"\u0165j\x03\x02\x02\x02\u0166\u0167\x07t\x02\x02\u0167\u0168\x07c\x02" +
		"\x02\u0168\u0169\x07k\x02\x02\u0169\u016A\x07u\x02\x02\u016A\u016B\x07" +
		"g\x02\x02\u016Bl\x03\x02\x02\x02\u016C\u016D\x07t\x02\x02\u016D\u016E" +
		"\x07g\x02\x02\u016E\u016F\x07e\x02\x02\u016Fn\x03\x02\x02\x02\u0170\u0171" +
		"\x07v\x02\x02\u0171\u0172\x07j\x02\x02\u0172\u0173\x07g\x02\x02\u0173" +
		"\u0174\x07p\x02\x02\u0174p\x03\x02\x02\x02\u0175\u0176\x07v\x02\x02\u0176" +
		"\u0177\x07{\x02\x02\u0177\u0178\x07r\x02\x02\u0178\u0179\x07g\x02\x02" +
		"\u0179r\x03\x02\x02\x02\u017A\u017B\x07x\x02\x02\u017B\u017C\x07c\x02" +
		"\x02\u017C\u017D\x07n\x02\x02\u017Dt\x03\x02\x02\x02\u017E\u017F\x07y" +
		"\x02\x02\u017F\u0180\x07k\x02\x02\u0180\u0181\x07v\x02\x02\u0181\u0182" +
		"\x07j\x02\x02\u0182v\x03\x02\x02\x02\u0183\u0184\x07y\x02\x02\u0184\u0185" +
		"\x07k\x02\x02\u0185\u0186\x07v\x02\x02\u0186\u0187\x07j\x02\x02\u0187" +
		"\u0188\x07v\x02\x02\u0188\u0189\x07{\x02\x02\u0189\u018A\x07r\x02\x02" +
		"\u018A\u018B\x07g\x02\x02\u018Bx\x03\x02\x02\x02\u018C\u018D\x07y\x02" +
		"\x02\u018D\u018E\x07j\x02\x02\u018E\u018F\x07k\x02\x02\u018F\u0190\x07" +
		"n\x02\x02\u0190\u0191\x07g\x02\x02\u0191z\x03\x02\x02\x02\u0192\u0193" +
		"\x07v\x02\x02\u0193\u0194\x07t\x02\x02\u0194\u0195\x07w\x02\x02\u0195" +
		"\u0196\x07g\x02\x02\u0196|\x03\x02\x02\x02\u0197\u0198\x07h\x02\x02\u0198" +
		"\u0199\x07c\x02\x02\u0199\u019A\x07n\x02\x02\u019A\u019B\x07u\x02\x02" +
		"\u019B\u019C\x07g\x02\x02\u019C~\x03\x02\x02\x02\u019D\u01A3\x05\x83B" +
		"\x02\u019E\u01A2\x05\x83B\x02\u019F\u01A2\x05\x81A\x02\u01A0\u01A2\t\x02" +
		"\x02\x02\u01A1\u019E\x03\x02\x02\x02\u01A1\u019F\x03\x02\x02\x02\u01A1" +
		"\u01A0\x03\x02\x02\x02\u01A2\u01A5\x03\x02\x02\x02\u01A3\u01A1\x03\x02" +
		"\x02\x02\u01A3\u01A4\x03\x02\x02\x02\u01A4\u01AC\x03\x02\x02\x02\u01A5" +
		"\u01A3\x03\x02\x02\x02\u01A6\u01A8\t\x03\x02\x02\u01A7\u01A6\x03\x02\x02" +
		"\x02\u01A8\u01A9\x03\x02\x02\x02\u01A9\u01A7\x03\x02\x02\x02\u01A9\u01AA" +
		"\x03\x02\x02\x02\u01AA\u01AC\x03\x02\x02\x02\u01AB\u019D\x03\x02\x02\x02" +
		"\u01AB\u01A7\x03\x02\x02\x02\u01AC\x80\x03\x02\x02\x02\u01AD\u01AE\t\x04" +
		"\x02\x02\u01AE\x82\x03\x02\x02\x02\u01AF\u01B0\t\x05\x02\x02\u01B0\x84" +
		"\x03\x02\x02\x02\u01B1\u01B3\x07\x0F\x02\x02\u01B2\u01B1\x03\x02\x02\x02" +
		"\u01B2\u01B3\x03\x02\x02\x02\u01B3\u01B4\x03\x02\x02\x02\u01B4\u01B7\x07" +
		"\f\x02\x02\u01B5\u01B7\x07\x0F\x02\x02\u01B6\u01B2\x03\x02\x02\x02\u01B6" +
		"\u01B5\x03\x02\x02\x02\u01B7\u01B8\x03\x02\x02\x02\u01B8\u01B9\bC\x02" +
		"\x02\u01B9\x86\x03\x02\x02\x02\u01BA\u01BC\t\x06\x02\x02\u01BB\u01BA\x03" +
		"\x02\x02\x02\u01BC\u01BD\x03\x02\x02\x02\u01BD\u01BB\x03\x02\x02\x02\u01BD" +
		"\u01BE\x03\x02\x02\x02\u01BE\u01BF\x03\x02\x02\x02\u01BF\u01C0\bD\x02" +
		"\x02\u01C0\x88\x03\x02\x02\x02\u01C1\u01C2\x07*\x02\x02\u01C2\u01C3\x07" +
		",\x02\x02\u01C3\u01C7\x03\x02\x02\x02\u01C4\u01C6\v\x02\x02\x02\u01C5" +
		"\u01C4\x03\x02\x02\x02\u01C6\u01C9\x03\x02\x02\x02\u01C7\u01C8\x03\x02" +
		"\x02\x02\u01C7\u01C5\x03\x02\x02\x02\u01C8\u01CA\x03\x02\x02\x02\u01C9" +
		"\u01C7\x03\x02\x02\x02\u01CA\u01CB\x07,\x02\x02\u01CB\u01CC\x07+\x02\x02" +
		"\u01CC\u01CD\x03\x02\x02\x02\u01CD\u01CE\bE\x02\x02\u01CE\x8A\x03\x02" +
		"\x02\x02\x12\x02\xC4\xCC\xCE\xD6\xDC\xE1\xE5\u01A1\u01A3\u01A9\u01AB\u01B2" +
		"\u01B6\u01BD\u01C7\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!smlLexer.__ATN) {
			smlLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(smlLexer._serializedATN));
		}

		return smlLexer.__ATN;
	}

}

