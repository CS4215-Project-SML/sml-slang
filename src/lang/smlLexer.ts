// Generated from ./src/lang/sml.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class smlLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly T__17 = 18;
	public static readonly T__18 = 19;
	public static readonly T__19 = 20;
	public static readonly T__20 = 21;
	public static readonly T__21 = 22;
	public static readonly T__22 = 23;
	public static readonly T__23 = 24;
	public static readonly T__24 = 25;
	public static readonly T__25 = 26;
	public static readonly T__26 = 27;
	public static readonly T__27 = 28;
	public static readonly T__28 = 29;
	public static readonly CHAR = 30;
	public static readonly STR = 31;
	public static readonly BOOL = 32;
	public static readonly REAL = 33;
	public static readonly INT = 34;
	public static readonly ABSTYPE = 35;
	public static readonly AND = 36;
	public static readonly ANDALSO = 37;
	public static readonly AS = 38;
	public static readonly CASE = 39;
	public static readonly DATATYPE = 40;
	public static readonly DO = 41;
	public static readonly ELSE = 42;
	public static readonly END = 43;
	public static readonly EXCEPTION = 44;
	public static readonly FN = 45;
	public static readonly FUN = 46;
	public static readonly HANDLE = 47;
	public static readonly IF = 48;
	public static readonly IN = 49;
	public static readonly INFIX = 50;
	public static readonly INFIXR = 51;
	public static readonly LET = 52;
	public static readonly LOCAL = 53;
	public static readonly NONFIX = 54;
	public static readonly OF = 55;
	public static readonly OP = 56;
	public static readonly OPEN = 57;
	public static readonly ORELSE = 58;
	public static readonly RAISE = 59;
	public static readonly REC = 60;
	public static readonly THEN = 61;
	public static readonly TYPE = 62;
	public static readonly VAL = 63;
	public static readonly WITH = 64;
	public static readonly WITHTYPE = 65;
	public static readonly WHILE = 66;
	public static readonly TRUE = 67;
	public static readonly FALSE = 68;
	public static readonly DIGIT = 69;
	public static readonly LETTER = 70;
	public static readonly NEWLINE = 71;
	public static readonly WHITESPACE = 72;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "CHAR", "STR", "BOOL", "REAL", "INT", 
		"ABSTYPE", "AND", "ANDALSO", "AS", "CASE", "DATATYPE", "DO", "ELSE", "END", 
		"EXCEPTION", "FN", "FUN", "HANDLE", "IF", "IN", "INFIX", "INFIXR", "LET", 
		"LOCAL", "NONFIX", "OF", "OP", "OPEN", "ORELSE", "RAISE", "REC", "THEN", 
		"TYPE", "VAL", "WITH", "WITHTYPE", "WHILE", "TRUE", "FALSE", "DIGIT", 
		"LETTER", "NEWLINE", "WHITESPACE",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "';'", "'='", "'('", "')'", "'{'", "','", "'}'", "'['", "']'", 
		"'#'", "'''", "'_'", "'!'", "'%'", "'&'", "'$'", "'+'", "'-'", "'/'", 
		"':'", "'<'", "'>'", "'?'", "'@'", "'\\'", "'~'", "'^'", "'|'", "'*'", 
		undefined, undefined, undefined, undefined, undefined, "'abstype'", "'and'", 
		"'andalso'", "'as'", "'case'", "'datatype'", "'do'", "'else'", "'end'", 
		"'exception'", "'fn'", "'fun'", "'handle'", "'if'", "'in'", "'infix'", 
		"'infixr'", "'let'", "'local'", "'nonfix'", "'of'", "'op'", "'open'", 
		"'orelse'", "'raise'", "'rec'", "'then'", "'type'", "'val'", "'with'", 
		"'withtype'", "'while'", "'true'", "'false'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "CHAR", "STR", "BOOL", "REAL", "INT", "ABSTYPE", 
		"AND", "ANDALSO", "AS", "CASE", "DATATYPE", "DO", "ELSE", "END", "EXCEPTION", 
		"FN", "FUN", "HANDLE", "IF", "IN", "INFIX", "INFIXR", "LET", "LOCAL", 
		"NONFIX", "OF", "OP", "OPEN", "ORELSE", "RAISE", "REC", "THEN", "TYPE", 
		"VAL", "WITH", "WITHTYPE", "WHILE", "TRUE", "FALSE", "DIGIT", "LETTER", 
		"NEWLINE", "WHITESPACE",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(smlLexer._LITERAL_NAMES, smlLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return smlLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(smlLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "sml.g4"; }

	// @Override
	public get ruleNames(): string[] { return smlLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return smlLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return smlLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return smlLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02J\u01BE\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t" +
		"\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E" +
		"\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13" +
		"\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17" +
		"\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1C" +
		"\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F" +
		"\x03\x1F\x03\x1F\x05\x1F\xD4\n\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03" +
		" \x07 \xDC\n \f \x0E \xDF\v \x03 \x03 \x03!\x03!\x05!\xE5\n!\x03\"\x06" +
		"\"\xE8\n\"\r\"\x0E\"\xE9\x03\"\x03\"\x06\"\xEE\n\"\r\"\x0E\"\xEF\x03#" +
		"\x06#\xF3\n#\r#\x0E#\xF4\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03%" +
		"\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03\'\x03\'\x03" +
		"\'\x03(\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03)\x03)\x03)\x03)\x03)\x03" +
		")\x03*\x03*\x03*\x03+\x03+\x03+\x03+\x03+\x03,\x03,\x03,\x03,\x03-\x03" +
		"-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03-\x03.\x03.\x03.\x03/\x03/\x03" +
		"/\x03/\x030\x030\x030\x030\x030\x030\x030\x031\x031\x031\x032\x032\x03" +
		"2\x033\x033\x033\x033\x033\x033\x034\x034\x034\x034\x034\x034\x034\x03" +
		"5\x035\x035\x035\x036\x036\x036\x036\x036\x036\x037\x037\x037\x037\x03" +
		"7\x037\x037\x038\x038\x038\x039\x039\x039\x03:\x03:\x03:\x03:\x03:\x03" +
		";\x03;\x03;\x03;\x03;\x03;\x03;\x03<\x03<\x03<\x03<\x03<\x03<\x03=\x03" +
		"=\x03=\x03=\x03>\x03>\x03>\x03>\x03>\x03?\x03?\x03?\x03?\x03?\x03@\x03" +
		"@\x03@\x03@\x03A\x03A\x03A\x03A\x03A\x03B\x03B\x03B\x03B\x03B\x03B\x03" +
		"B\x03B\x03B\x03C\x03C\x03C\x03C\x03C\x03C\x03D\x03D\x03D\x03D\x03D\x03" +
		"E\x03E\x03E\x03E\x03E\x03E\x03F\x03F\x03G\x03G\x03H\x05H\u01B2\nH\x03" +
		"H\x03H\x05H\u01B6\nH\x03I\x06I\u01B9\nI\rI\x0EI\u01BA\x03I\x03I\x02\x02" +
		"\x02J\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b" +
		"\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02" +
		"\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02" +
		"\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02" +
		"\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(" +
		"O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x02" +
		"4g\x025i\x026k\x027m\x028o\x029q\x02:s\x02;u\x02<w\x02=y\x02>{\x02?}\x02" +
		"@\x7F\x02A\x81\x02B\x83\x02C\x85\x02D\x87\x02E\x89\x02F\x8B\x02G\x8D\x02" +
		"H\x8F\x02I\x91\x02J\x03\x02\x05\x03\x022;\x04\x02C\\c|\x04\x02\v\v\"\"" +
		"\x02\u01C9\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03" +
		"\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02" +
		"\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02" +
		"\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02" +
		"\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02" +
		"\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02" +
		"\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-" +
		"\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02" +
		"\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03" +
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02" +
		"\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02" +
		"O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02" +
		"\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02" +
		"\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03" +
		"\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02" +
		"\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02" +
		"q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02" +
		"\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02" +
		"\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02" +
		"\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02" +
		"\x02\x8B\x03\x02\x02\x02\x02\x8D\x03\x02\x02\x02\x02\x8F\x03\x02\x02\x02" +
		"\x02\x91\x03\x02\x02\x02\x03\x93\x03\x02\x02\x02\x05\x95\x03\x02\x02\x02" +
		"\x07\x97\x03\x02\x02\x02\t\x99\x03\x02\x02\x02\v\x9B\x03\x02\x02\x02\r" +
		"\x9D\x03\x02\x02\x02\x0F\x9F\x03\x02\x02\x02\x11\xA1\x03\x02\x02\x02\x13" +
		"\xA3\x03\x02\x02\x02\x15\xA5\x03\x02\x02\x02\x17\xA7\x03\x02\x02\x02\x19" +
		"\xA9\x03\x02\x02\x02\x1B\xAB\x03\x02\x02\x02\x1D\xAD\x03\x02\x02\x02\x1F" +
		"\xAF\x03\x02\x02\x02!\xB1\x03\x02\x02\x02#\xB3\x03\x02\x02\x02%\xB5\x03" +
		"\x02\x02\x02\'\xB7\x03\x02\x02\x02)\xB9\x03\x02\x02\x02+\xBB\x03\x02\x02" +
		"\x02-\xBD\x03\x02\x02\x02/\xBF\x03\x02\x02\x021\xC1\x03\x02\x02\x023\xC3" +
		"\x03\x02\x02\x025\xC5\x03\x02\x02\x027\xC7\x03\x02\x02\x029\xC9\x03\x02" +
		"\x02\x02;\xCB\x03\x02\x02\x02=\xCD\x03\x02\x02\x02?\xD7\x03\x02\x02\x02" +
		"A\xE4\x03\x02\x02\x02C\xE7\x03\x02\x02\x02E\xF2\x03\x02\x02\x02G\xF6\x03" +
		"\x02\x02\x02I\xFE\x03\x02\x02\x02K\u0102\x03\x02\x02\x02M\u010A\x03\x02" +
		"\x02\x02O\u010D\x03\x02\x02\x02Q\u0112\x03\x02\x02\x02S\u011B\x03\x02" +
		"\x02\x02U\u011E\x03\x02\x02\x02W\u0123\x03\x02\x02\x02Y\u0127\x03\x02" +
		"\x02\x02[\u0131\x03\x02\x02\x02]\u0134\x03\x02\x02\x02_\u0138\x03\x02" +
		"\x02\x02a\u013F\x03\x02\x02\x02c\u0142\x03\x02\x02\x02e\u0145\x03\x02" +
		"\x02\x02g\u014B\x03\x02\x02\x02i\u0152\x03\x02\x02\x02k\u0156\x03\x02" +
		"\x02\x02m\u015C\x03\x02\x02\x02o\u0163\x03\x02\x02\x02q\u0166\x03\x02" +
		"\x02\x02s\u0169\x03\x02\x02\x02u\u016E\x03\x02\x02\x02w\u0175\x03\x02" +
		"\x02\x02y\u017B\x03\x02\x02\x02{\u017F\x03\x02\x02\x02}\u0184\x03\x02" +
		"\x02\x02\x7F\u0189\x03\x02\x02\x02\x81\u018D\x03\x02\x02\x02\x83\u0192" +
		"\x03\x02\x02\x02\x85\u019B\x03\x02\x02\x02\x87\u01A1\x03\x02\x02\x02\x89" +
		"\u01A6\x03\x02\x02\x02\x8B\u01AC\x03\x02\x02\x02\x8D\u01AE\x03\x02\x02" +
		"\x02\x8F\u01B5\x03\x02\x02\x02\x91\u01B8\x03\x02\x02\x02\x93\x94\x07=" +
		"\x02\x02\x94\x04\x03\x02\x02\x02\x95\x96\x07?\x02\x02\x96\x06\x03\x02" +
		"\x02\x02\x97\x98\x07*\x02\x02\x98\b\x03\x02\x02\x02\x99\x9A\x07+\x02\x02" +
		"\x9A\n\x03\x02\x02\x02\x9B\x9C\x07}\x02\x02\x9C\f\x03\x02\x02\x02\x9D" +
		"\x9E\x07.\x02\x02\x9E\x0E\x03\x02\x02\x02\x9F\xA0\x07\x7F\x02\x02\xA0" +
		"\x10\x03\x02\x02\x02\xA1\xA2\x07]\x02\x02\xA2\x12\x03\x02\x02\x02\xA3" +
		"\xA4\x07_\x02\x02\xA4\x14\x03\x02\x02\x02\xA5\xA6\x07%\x02\x02\xA6\x16" +
		"\x03\x02\x02\x02\xA7\xA8\x07)\x02\x02\xA8\x18\x03\x02\x02\x02\xA9\xAA" +
		"\x07a\x02\x02\xAA\x1A\x03\x02\x02\x02\xAB\xAC\x07#\x02\x02\xAC\x1C\x03" +
		"\x02\x02\x02\xAD\xAE\x07\'\x02\x02\xAE\x1E\x03\x02\x02\x02\xAF\xB0\x07" +
		"(\x02\x02\xB0 \x03\x02\x02\x02\xB1\xB2\x07&\x02\x02\xB2\"\x03\x02\x02" +
		"\x02\xB3\xB4\x07-\x02\x02\xB4$\x03\x02\x02\x02\xB5\xB6\x07/\x02\x02\xB6" +
		"&\x03\x02\x02\x02\xB7\xB8\x071\x02\x02\xB8(\x03\x02\x02\x02\xB9\xBA\x07" +
		"<\x02\x02\xBA*\x03\x02\x02\x02\xBB\xBC\x07>\x02\x02\xBC,\x03\x02\x02\x02" +
		"\xBD\xBE\x07@\x02\x02\xBE.\x03\x02\x02\x02\xBF\xC0\x07A\x02\x02\xC00\x03" +
		"\x02\x02\x02\xC1\xC2\x07B\x02\x02\xC22\x03\x02\x02\x02\xC3\xC4\x07^\x02" +
		"\x02\xC44\x03\x02\x02\x02\xC5\xC6\x07\x80\x02\x02\xC66\x03\x02\x02\x02" +
		"\xC7\xC8\x07`\x02\x02\xC88\x03\x02\x02\x02\xC9\xCA\x07~\x02\x02\xCA:\x03" +
		"\x02\x02\x02\xCB\xCC\x07,\x02\x02\xCC<\x03\x02\x02\x02\xCD\xCE\x07%\x02" +
		"\x02\xCE\xCF\x07$\x02\x02\xCF\xD3\x03\x02\x02\x02\xD0\xD4\x05\x91I\x02" +
		"\xD1\xD4\x05\x8BF\x02\xD2\xD4\x05\x8DG\x02\xD3\xD0\x03\x02\x02\x02\xD3" +
		"\xD1\x03\x02\x02\x02\xD3\xD2\x03\x02\x02\x02\xD4\xD5\x03\x02\x02\x02\xD5" +
		"\xD6\x07$\x02\x02\xD6>\x03\x02\x02\x02\xD7\xDD\x07$\x02\x02\xD8\xDC\x05" +
		"\x91I\x02\xD9\xDC\x05\x8BF\x02\xDA\xDC\x05\x8DG\x02\xDB\xD8\x03\x02\x02" +
		"\x02\xDB\xD9\x03\x02\x02\x02\xDB\xDA\x03\x02\x02\x02\xDC\xDF\x03\x02\x02" +
		"\x02\xDD\xDB\x03\x02\x02\x02\xDD\xDE\x03\x02\x02\x02\xDE\xE0\x03\x02\x02" +
		"\x02\xDF\xDD\x03\x02\x02\x02\xE0\xE1\x07$\x02\x02\xE1@\x03\x02\x02\x02" +
		"\xE2\xE5\x05\x87D\x02\xE3\xE5\x05\x89E\x02\xE4\xE2\x03\x02\x02\x02\xE4" +
		"\xE3\x03\x02\x02\x02\xE5B\x03\x02\x02\x02\xE6\xE8\x05\x8BF\x02\xE7\xE6" +
		"\x03\x02\x02\x02\xE8\xE9\x03\x02\x02\x02\xE9\xE7\x03\x02\x02\x02\xE9\xEA" +
		"\x03\x02\x02\x02\xEA\xEB\x03\x02\x02\x02\xEB\xED\x070\x02\x02\xEC\xEE" +
		"\x05\x8BF\x02\xED\xEC\x03\x02\x02\x02\xEE\xEF\x03\x02\x02\x02\xEF\xED" +
		"\x03\x02\x02\x02\xEF\xF0\x03\x02\x02\x02\xF0D\x03\x02\x02\x02\xF1\xF3" +
		"\x05\x8BF\x02\xF2\xF1\x03\x02\x02\x02\xF3\xF4\x03\x02\x02\x02\xF4\xF2" +
		"\x03\x02\x02\x02\xF4\xF5\x03\x02\x02\x02\xF5F\x03\x02\x02\x02\xF6\xF7" +
		"\x07c\x02\x02\xF7\xF8\x07d\x02\x02\xF8\xF9\x07u\x02\x02\xF9\xFA\x07v\x02" +
		"\x02\xFA\xFB\x07{\x02\x02\xFB\xFC\x07r\x02\x02\xFC\xFD\x07g\x02\x02\xFD" +
		"H\x03\x02\x02\x02\xFE\xFF\x07c\x02\x02\xFF\u0100\x07p\x02\x02\u0100\u0101" +
		"\x07f\x02\x02\u0101J\x03\x02\x02\x02\u0102\u0103\x07c\x02\x02\u0103\u0104" +
		"\x07p\x02\x02\u0104\u0105\x07f\x02\x02\u0105\u0106\x07c\x02\x02\u0106" +
		"\u0107\x07n\x02\x02\u0107\u0108\x07u\x02\x02\u0108\u0109\x07q\x02\x02" +
		"\u0109L\x03\x02\x02\x02\u010A\u010B\x07c\x02\x02\u010B\u010C\x07u\x02" +
		"\x02\u010CN\x03\x02\x02\x02\u010D\u010E\x07e\x02\x02\u010E\u010F\x07c" +
		"\x02\x02\u010F\u0110\x07u\x02\x02\u0110\u0111\x07g\x02\x02\u0111P\x03" +
		"\x02\x02\x02\u0112\u0113\x07f\x02\x02\u0113\u0114\x07c\x02\x02\u0114\u0115" +
		"\x07v\x02\x02\u0115\u0116\x07c\x02\x02\u0116\u0117\x07v\x02\x02\u0117" +
		"\u0118\x07{\x02\x02\u0118\u0119\x07r\x02\x02\u0119\u011A\x07g\x02\x02" +
		"\u011AR\x03\x02\x02\x02\u011B\u011C\x07f\x02\x02\u011C\u011D\x07q\x02" +
		"\x02\u011DT\x03\x02\x02\x02\u011E\u011F\x07g\x02\x02\u011F\u0120\x07n" +
		"\x02\x02\u0120\u0121\x07u\x02\x02\u0121\u0122\x07g\x02\x02\u0122V\x03" +
		"\x02\x02\x02\u0123\u0124\x07g\x02\x02\u0124\u0125\x07p\x02\x02\u0125\u0126" +
		"\x07f\x02\x02\u0126X\x03\x02\x02\x02\u0127\u0128\x07g\x02\x02\u0128\u0129" +
		"\x07z\x02\x02\u0129\u012A\x07e\x02\x02\u012A\u012B\x07g\x02\x02\u012B" +
		"\u012C\x07r\x02\x02\u012C\u012D\x07v\x02\x02\u012D\u012E\x07k\x02\x02" +
		"\u012E\u012F\x07q\x02\x02\u012F\u0130\x07p\x02\x02\u0130Z\x03\x02\x02" +
		"\x02\u0131\u0132\x07h\x02\x02\u0132\u0133\x07p\x02\x02\u0133\\\x03\x02" +
		"\x02\x02\u0134\u0135\x07h\x02\x02\u0135\u0136\x07w\x02\x02\u0136\u0137" +
		"\x07p\x02\x02\u0137^\x03\x02\x02\x02\u0138\u0139\x07j\x02\x02\u0139\u013A" +
		"\x07c\x02\x02\u013A\u013B\x07p\x02\x02\u013B\u013C\x07f\x02\x02\u013C" +
		"\u013D\x07n\x02\x02\u013D\u013E\x07g\x02\x02\u013E`\x03\x02\x02\x02\u013F" +
		"\u0140\x07k\x02\x02\u0140\u0141\x07h\x02\x02\u0141b\x03\x02\x02\x02\u0142" +
		"\u0143\x07k\x02\x02\u0143\u0144\x07p\x02\x02\u0144d\x03\x02\x02\x02\u0145" +
		"\u0146\x07k\x02\x02\u0146\u0147\x07p\x02\x02\u0147\u0148\x07h\x02\x02" +
		"\u0148\u0149\x07k\x02\x02\u0149\u014A\x07z\x02\x02\u014Af\x03\x02\x02" +
		"\x02\u014B\u014C\x07k\x02\x02\u014C\u014D\x07p\x02\x02\u014D\u014E\x07" +
		"h\x02\x02\u014E\u014F\x07k\x02\x02\u014F\u0150\x07z\x02\x02\u0150\u0151" +
		"\x07t\x02\x02\u0151h\x03\x02\x02\x02\u0152\u0153\x07n\x02\x02\u0153\u0154" +
		"\x07g\x02\x02\u0154\u0155\x07v\x02\x02\u0155j\x03\x02\x02\x02\u0156\u0157" +
		"\x07n\x02\x02\u0157\u0158\x07q\x02\x02\u0158\u0159\x07e\x02\x02\u0159" +
		"\u015A\x07c\x02\x02\u015A\u015B\x07n\x02\x02\u015Bl\x03\x02\x02\x02\u015C" +
		"\u015D\x07p\x02\x02\u015D\u015E\x07q\x02\x02\u015E\u015F\x07p\x02\x02" +
		"\u015F\u0160\x07h\x02\x02\u0160\u0161\x07k\x02\x02\u0161\u0162\x07z\x02" +
		"\x02\u0162n\x03\x02\x02\x02\u0163\u0164\x07q\x02\x02\u0164\u0165\x07h" +
		"\x02\x02\u0165p\x03\x02\x02\x02\u0166\u0167\x07q\x02\x02\u0167\u0168\x07" +
		"r\x02\x02\u0168r\x03\x02\x02\x02\u0169\u016A\x07q\x02\x02\u016A\u016B" +
		"\x07r\x02\x02\u016B\u016C\x07g\x02\x02\u016C\u016D\x07p\x02\x02\u016D" +
		"t\x03\x02\x02\x02\u016E\u016F\x07q\x02\x02\u016F\u0170\x07t\x02\x02\u0170" +
		"\u0171\x07g\x02\x02\u0171\u0172\x07n\x02\x02\u0172\u0173\x07u\x02\x02" +
		"\u0173\u0174\x07g\x02\x02\u0174v\x03\x02\x02\x02\u0175\u0176\x07t\x02" +
		"\x02\u0176\u0177\x07c\x02\x02\u0177\u0178\x07k\x02\x02\u0178\u0179\x07" +
		"u\x02\x02\u0179\u017A\x07g\x02\x02\u017Ax\x03\x02\x02\x02\u017B\u017C" +
		"\x07t\x02\x02\u017C\u017D\x07g\x02\x02\u017D\u017E\x07e\x02\x02\u017E" +
		"z\x03\x02\x02\x02\u017F\u0180\x07v\x02\x02\u0180\u0181\x07j\x02\x02\u0181" +
		"\u0182\x07g\x02\x02\u0182\u0183\x07p\x02\x02\u0183|\x03\x02\x02\x02\u0184" +
		"\u0185\x07v\x02\x02\u0185\u0186\x07{\x02\x02\u0186\u0187\x07r\x02\x02" +
		"\u0187\u0188\x07g\x02\x02\u0188~\x03\x02\x02\x02\u0189\u018A\x07x\x02" +
		"\x02\u018A\u018B\x07c\x02\x02\u018B\u018C\x07n\x02\x02\u018C\x80\x03\x02" +
		"\x02\x02\u018D\u018E\x07y\x02\x02\u018E\u018F\x07k\x02\x02\u018F\u0190" +
		"\x07v\x02\x02\u0190\u0191\x07j\x02\x02\u0191\x82\x03\x02\x02\x02\u0192" +
		"\u0193\x07y\x02\x02\u0193\u0194\x07k\x02\x02\u0194\u0195\x07v\x02\x02" +
		"\u0195\u0196\x07j\x02\x02\u0196\u0197\x07v\x02\x02\u0197\u0198\x07{\x02" +
		"\x02\u0198\u0199\x07r\x02\x02\u0199\u019A\x07g\x02\x02\u019A\x84\x03\x02" +
		"\x02\x02\u019B\u019C\x07y\x02\x02\u019C\u019D\x07j\x02\x02\u019D\u019E" +
		"\x07k\x02\x02\u019E\u019F\x07n\x02\x02\u019F\u01A0\x07g\x02\x02\u01A0" +
		"\x86\x03\x02\x02\x02\u01A1\u01A2\x07v\x02\x02\u01A2\u01A3\x07t\x02\x02" +
		"\u01A3\u01A4\x07w\x02\x02\u01A4\u01A5\x07g\x02\x02\u01A5\x88\x03\x02\x02" +
		"\x02\u01A6\u01A7\x07h\x02\x02\u01A7\u01A8\x07c\x02\x02\u01A8\u01A9\x07" +
		"n\x02\x02\u01A9\u01AA\x07u\x02\x02\u01AA\u01AB\x07g\x02\x02\u01AB\x8A" +
		"\x03\x02\x02\x02\u01AC\u01AD\t\x02\x02\x02\u01AD\x8C\x03\x02\x02\x02\u01AE" +
		"\u01AF\t\x03\x02\x02\u01AF\x8E\x03\x02\x02\x02\u01B0\u01B2\x07\x0F\x02" +
		"\x02\u01B1\u01B0\x03\x02\x02\x02\u01B1\u01B2\x03\x02\x02\x02\u01B2\u01B3" +
		"\x03\x02\x02\x02\u01B3\u01B6\x07\f\x02\x02\u01B4\u01B6\x07\x0F\x02\x02" +
		"\u01B5\u01B1\x03\x02\x02\x02\u01B5\u01B4\x03\x02\x02\x02\u01B6\x90\x03" +
		"\x02\x02\x02\u01B7\u01B9\t\x04\x02\x02\u01B8\u01B7\x03\x02\x02\x02\u01B9" +
		"\u01BA\x03\x02\x02\x02\u01BA\u01B8\x03\x02\x02\x02\u01BA\u01BB\x03\x02" +
		"\x02\x02\u01BB\u01BC\x03\x02\x02\x02\u01BC\u01BD\bI\x02\x02\u01BD\x92" +
		"\x03\x02\x02\x02\r\x02\xD3\xDB\xDD\xE4\xE9\xEF\xF4\u01B1\u01B5\u01BA\x03" +
		"\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!smlLexer.__ATN) {
			smlLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(smlLexer._serializedATN));
		}

		return smlLexer.__ATN;
	}

}

